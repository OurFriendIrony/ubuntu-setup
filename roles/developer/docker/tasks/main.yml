---

#################################################################

- name: "apt | install | prereq"
  apt:
    name    : "{{ libraries_apt }}"
    state   : "latest"
  tags:
    - "developer"
    - "docker"

#################################################################

- name: "pip | install | prereq"
  pip:
    name    : "{{ libraries_pip }}"
    state   : "latest"
  tags:
    - "developer"
    - "docker"

#################################################################

- name: "apt | key"
  when: not proxy
  apt_key:
    url           : "{{ docker.key_server }}"
    id            : "{{ docker.key_id }}"
    state         : "present"
  tags:
    - "developer"
    - "docker"

- name: "apt | key"
  become: yes
  become_user: "{{ primary_user.id }}"
  when: proxy
  shell: "sudo -E curl -fsSL {{ docker.key_server }} | sudo -E apt-key add -"
  tags:
    - "developer"
    - "docker"

- name: "apt | repo"
  when: not proxy
  apt_repository:
    repo          : "{{ docker.repo }}"
    state         : "present"
  tags:
    - "developer"
    - "docker"

- name: "apt | repo"
  become: yes
  become_user: "{{ primary_user.id }}"
  when: proxy
  shell: "sudo -E add-apt-repository \"{{ docker.repo }}\" -y"
  tags:
    - "developer"
    - "docker"

- name: "apt | install"
  apt:
    name          : "{{ docker.apts }}"
    state         : "latest"
    update_cache  : "yes"
  tags:
    - "developer"
    - "docker"

#################################################################

- name: "proxy | mkdirs"
  with_items:
    - "{{ all_users }}"
  file:
    name    : "{{ item.home }}/.docker"
    owner   : "{{ item.id   }}"
    group   : "{{ item.id   }}"
    state   : "directory"
  tags:
    - "developer"
    - "docker"
    - "proxy"

- name: "proxy | mkdirs | system"
  file:
    name    : "/etc/systemd/system/docker.service.d/"
    owner   : "{{ root_user.id }}"
    group   : "{{ root_user.id }}"
    state   : "directory"
  tags:
    - "developer"
    - "docker"
    - "proxy"

- name: "proxy | config"
  when: proxy
  with_items:
    - "{{ all_users }}"
  template:
    src     : "config.json.j2"
    dest    : "{{ item.home }}/.docker/config.json"
    owner   : "{{ item.id   }}"
    group   : "{{ item.id   }}"
  register: docker_config
  tags:
    - "developer"
    - "docker"
    - "proxy"

- name: "proxy | config | system"
  when: proxy
  template:
    src     : "http-proxy.conf.j2"
    dest    : "/etc/systemd/system/docker.service.d/http-proxy.conf"
    owner   : "{{ root_user.id }}"
    group   : "{{ root_user.id }}"
  register: docker_config
  tags:
    - "developer"
    - "docker"
    - "proxy"

#################################################################

- name: "insecure registries"
  template:
    src     : "daemon.json.j2"
    dest    : "/etc/docker/daemon.json"
    owner   : "{{ root_user.id }}"
    group   : "{{ root_user.id }}"
  register: docker_config
  tags:
    - "developer"
    - "docker"
    - "docker-test"

#################################################################

- name: "service | restart"
  when:
    - proxy
    - docker_config is defined
    - docker_config.changed
  service:
    name  : "docker"
    state : "restarted"
  tags:
    - "developer"
    - "docker"
    - "proxy"

#################################################################

- name: "group"
  user:
    name          : "{{ primary_user.id }}"
    groups        : "docker"
    append        : "yes"
  tags:
    - "developer"
    - "docker"

#################################################################

- name: "Login to private repos"
  when:
    - docker_private_creds is defined
  with_items:
    - "{{ docker_private_registries }}"
  docker_login:
    registry: "{{ item }}"
    username: "{{ docker_private_creds.user }}"
    password: "{{ docker_private_creds.pass }}"
  tags:
    - "developer"
    - "docker"

- name: "images | install"
  become: yes
  with_items:
    - "{{ docker_images }}"
  docker_image:
    name          : "{{ item.name }}"
    tag           : "{{ item.version }}"
  tags:
    - "developer"
    - "docker"

#################################################################

